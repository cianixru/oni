# Test against the latest version of this Node.js version
environment:
  nodejs_version: "8"

os: unstable

branches:
    only:
    - master
    - /^release.*/

cache:
    - "%LOCALAPPDATA%\\Yarn"

platform:
    - x86
    - x64

# Install scripts. (runs after repo cloning)
install:
  # Ensure the Git Submoduldes have been pulled down too
  - git submodule update --init --recursive
  # Get the latest stable version of Node.js or io.js
  - ps: Install-Product node $env:nodejs_version
  # Workaround https://github.com/npm/npm/issues/18380
  - npm install -g yarn
  - node --version
  - npm --version
  # install modules
  - yarn install

artifacts:
    - path: dist/*.exe
      name: SetupExe

    - path: dist/*.zip
      name: ProductZip

    - path: dist/media/screenshot-win32.png
      name: DemoScreenshot

deploy:
    - provider: GitHub
      repository: onivim/oni
      auth_token:
          secure: 7+dYCBtYLMoaH4xvTno1mAw8mb4CPFYAcosPI8kRTmcqYKehzmhpChU825uGdaB6
      draft: false
      prerelease: false
      force_update: true
      on:
          appveyor_repo_tag: true

    - provider: S3
      access_key_id: AKIAIYMATI2CEFTHPBOQ
      secret_access_key:
          secure: brqAO0yA6DSxwRbf7IbbmhvyEoQqSeetdrq4mutR2aaeLJBQu6by4u1Td+wq5Msc
      bucket: oni-builds
      region: us-west-2
      unzip: false
      set_public: true
      folder: $(APPVEYOR_REPO_BRANCH)
      artifact: SetupExe, ProductZip

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # build
  - npm run build
  - npm run lint
  - npm run test:unit
  # create setup package
  - npm run copy-icons
  - npm run dist:win
  - npm run pack:win
  # run integration tests
  - npm run test:integration
  - npm run demo

# Don't actually build.
build: off
